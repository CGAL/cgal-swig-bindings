# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_CGAL_HalfedgeDS')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_CGAL_HalfedgeDS')
    _CGAL_HalfedgeDS = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_CGAL_HalfedgeDS', [dirname(__file__)])
        except ImportError:
            import _CGAL_HalfedgeDS
            return _CGAL_HalfedgeDS
        try:
            _mod = imp.load_module('_CGAL_HalfedgeDS', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _CGAL_HalfedgeDS = swig_import_helper()
    del swig_import_helper
else:
    import _CGAL_HalfedgeDS
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

import CGAL.CGAL_Kernel
RELATIVE_INDEXING = _CGAL_HalfedgeDS.RELATIVE_INDEXING
ABSOLUTE_INDEXING = _CGAL_HalfedgeDS.ABSOLUTE_INDEXING
class HDS_Halfedge_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Halfedge_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Halfedge_handle, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Halfedge_handle()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def opposite(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_opposite(self, *args)

    def next(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_next(self, *args)

    def set_next(self, c):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_set_next(self, c)

    def is_border(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_is_border(self)

    def prev(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_prev(self, *args)

    def set_prev(self, c):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_set_prev(self, c)

    def vertex(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_vertex(self, *args)

    def set_vertex(self, c):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_set_vertex(self, c)

    def face(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_face(self)

    def set_face(self, c):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_set_face(self, c)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle_deepcopy(self, *args)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_handle___hash__(self)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Halfedge_handle
    __del__ = lambda self: None
HDS_Halfedge_handle_swigregister = _CGAL_HalfedgeDS.HDS_Halfedge_handle_swigregister
HDS_Halfedge_handle_swigregister(HDS_Halfedge_handle)

class HDS_Face_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Face_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Face_handle, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Face_handle()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def halfedge(self, *args):
        return _CGAL_HalfedgeDS.HDS_Face_handle_halfedge(self, *args)

    def set_halfedge(self, c):
        return _CGAL_HalfedgeDS.HDS_Face_handle_set_halfedge(self, c)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Face_handle_deepcopy(self, *args)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Face_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Face_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_HalfedgeDS.HDS_Face_handle___hash__(self)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Face_handle
    __del__ = lambda self: None
HDS_Face_handle_swigregister = _CGAL_HalfedgeDS.HDS_Face_handle_swigregister
HDS_Face_handle_swigregister(HDS_Face_handle)

class HDS_Vertex_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Vertex_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Vertex_handle, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Vertex_handle()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def halfedge(self, *args):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle_halfedge(self, *args)

    def set_halfedge(self, c):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle_set_halfedge(self, c)

    def point(self, *args):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle_point(self, *args)

    def set_point(self, p):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle_set_point(self, p)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle_deepcopy(self, *args)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_HalfedgeDS.HDS_Vertex_handle___hash__(self)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Vertex_handle
    __del__ = lambda self: None
HDS_Vertex_handle_swigregister = _CGAL_HalfedgeDS.HDS_Vertex_handle_swigregister
HDS_Vertex_handle_swigregister(HDS_Vertex_handle)

class HDS_Vertex_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Vertex_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Vertex_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Vertex_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator___iter__(self)

    def __next__(self):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator___next__(self)

    def next(self, *args):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Vertex_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Vertex_iterator
    __del__ = lambda self: None
HDS_Vertex_iterator_swigregister = _CGAL_HalfedgeDS.HDS_Vertex_iterator_swigregister
HDS_Vertex_iterator_swigregister(HDS_Vertex_iterator)

class HDS_Halfedge_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Halfedge_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Halfedge_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Halfedge_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator___iter__(self)

    def __next__(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator___next__(self)

    def next(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Halfedge_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Halfedge_iterator
    __del__ = lambda self: None
HDS_Halfedge_iterator_swigregister = _CGAL_HalfedgeDS.HDS_Halfedge_iterator_swigregister
HDS_Halfedge_iterator_swigregister(HDS_Halfedge_iterator)

class HDS_Face_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HDS_Face_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HDS_Face_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HDS_Face_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_HalfedgeDS.HDS_Face_iterator___iter__(self)

    def __next__(self):
        return _CGAL_HalfedgeDS.HDS_Face_iterator___next__(self)

    def next(self, *args):
        return _CGAL_HalfedgeDS.HDS_Face_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HDS_Face_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_HalfedgeDS.HDS_Face_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_HalfedgeDS.HDS_Face_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_HalfedgeDS.HDS_Face_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HDS_Face_iterator
    __del__ = lambda self: None
HDS_Face_iterator_swigregister = _CGAL_HalfedgeDS.HDS_Face_iterator_swigregister
HDS_Face_iterator_swigregister(HDS_Face_iterator)

class HalfedgeDS_modifier(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HalfedgeDS_modifier, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HalfedgeDS_modifier, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_HalfedgeDS.new_HalfedgeDS_modifier()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def begin_surface(self, v, f, h=0, mode=RELATIVE_INDEXING):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_begin_surface(self, v, f, h, mode)

    def end_surface(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_end_surface(self)

    def add_vertex(self, p):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_add_vertex(self, p)

    def begin_facet(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_begin_facet(self)

    def end_facet(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_end_facet(self)

    def add_vertex_to_facet(self, i):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_add_vertex_to_facet(self, i)

    def rollback(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_rollback(self)

    def clear(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_modifier_clear(self)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HalfedgeDS_modifier
    __del__ = lambda self: None
HalfedgeDS_modifier_swigregister = _CGAL_HalfedgeDS.HalfedgeDS_modifier_swigregister
HalfedgeDS_modifier_swigregister(HalfedgeDS_modifier)

class HalfedgeDS(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HalfedgeDS, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HalfedgeDS, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_HalfedgeDS.new_HalfedgeDS(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def reserve(self, c1, c2, c3):
        return _CGAL_HalfedgeDS.HalfedgeDS_reserve(self, c1, c2, c3)

    def size_of_vertices(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_size_of_vertices(self)

    def size_of_halfedges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_size_of_halfedges(self)

    def size_of_faces(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_size_of_faces(self)

    def capacity_of_vertices(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_capacity_of_vertices(self)

    def capacity_of_halfedges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_capacity_of_halfedges(self)

    def capacity_of_faces(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_capacity_of_faces(self)

    def bytes(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_bytes(self)

    def bytes_reserved(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_bytes_reserved(self)

    def vertices(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices(self)

    def halfedges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_halfedges(self)

    def faces(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces(self)

    def vertices_push_back(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices_push_back(self, *args)

    def edges_push_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_edges_push_back(self)

    def faces_push_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces_push_back(self)

    def vertices_pop_front(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices_pop_front(self)

    def vertices_pop_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices_pop_back(self)

    def vertices_erase(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices_erase(self, *args)

    def edges_pop_front(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_edges_pop_front(self)

    def edges_pop_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_edges_pop_back(self)

    def edges_erase(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_edges_erase(self, *args)

    def faces_pop_front(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces_pop_front(self)

    def faces_pop_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces_pop_back(self)

    def faces_erase(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces_erase(self, *args)

    def vertices_clear(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_vertices_clear(self)

    def edges_clear(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_edges_clear(self)

    def faces_clear(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_faces_clear(self)

    def clear(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_clear(self)

    def normalize_border(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_normalize_border(self)

    def size_of_border_halfedges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_size_of_border_halfedges(self)

    def size_of_border_edges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_size_of_border_edges(self)

    def border_halfedges(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_border_halfedges(self)

    def deepcopy(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_deepcopy(self, *args)

    def delegate(self, modifier):
        return _CGAL_HalfedgeDS.HalfedgeDS_delegate(self, modifier)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HalfedgeDS
    __del__ = lambda self: None
HalfedgeDS_swigregister = _CGAL_HalfedgeDS.HalfedgeDS_swigregister
HalfedgeDS_swigregister(HalfedgeDS)

class HalfedgeDS_decorator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HalfedgeDS_decorator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HalfedgeDS_decorator, name)
    __repr__ = _swig_repr

    def __init__(self, hds):
        this = _CGAL_HalfedgeDS.new_HalfedgeDS_decorator(hds)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def vertices_push_back(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_vertices_push_back(self, *args)

    def faces_push_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_faces_push_back(self)

    def create_loop(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_create_loop(self)

    def create_segment(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_create_segment(self)

    def vertices_pop_front(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_vertices_pop_front(self)

    def vertices_pop_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_vertices_pop_back(self)

    def vertices_erase(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_vertices_erase(self, *args)

    def faces_pop_front(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_faces_pop_front(self)

    def faces_pop_back(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_faces_pop_back(self)

    def faces_erase(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_faces_erase(self, *args)

    def erase_face(self, c):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_erase_face(self, c)

    def erase_connected_component(self, c):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_erase_connected_component(self, c)

    def keep_largest_connected_components(self, c):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_keep_largest_connected_components(self, c)

    def make_hole(self, c):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_make_hole(self, c)

    def fill_hole(self, c):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_fill_hole(self, c)

    def add_face_to_border(self, c1, c2):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_add_face_to_border(self, c1, c2)

    def split_face(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_split_face(self, *args)

    def join_face(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_join_face(self, *args)

    def split_vertex(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_split_vertex(self, *args)

    def join_vertex(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_join_vertex(self, *args)

    def create_center_vertex(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_create_center_vertex(self, *args)

    def erase_center_vertex(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_erase_center_vertex(self, *args)

    def split_loop(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_split_loop(self, *args)

    def join_loop(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_join_loop(self, *args)

    def is_valid(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_is_valid(self, *args)

    def normalized_border_is_valid(self, *args):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_normalized_border_is_valid(self, *args)

    def inside_out(self):
        return _CGAL_HalfedgeDS.HalfedgeDS_decorator_inside_out(self)
    __swig_destroy__ = _CGAL_HalfedgeDS.delete_HalfedgeDS_decorator
    __del__ = lambda self: None
HalfedgeDS_decorator_swigregister = _CGAL_HalfedgeDS.HalfedgeDS_decorator_swigregister
HalfedgeDS_decorator_swigregister(HalfedgeDS_decorator)

# This file is compatible with both classic and new-style classes.


