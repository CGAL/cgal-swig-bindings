# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_CGAL_Polyline_simplification_2')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_CGAL_Polyline_simplification_2')
    _CGAL_Polyline_simplification_2 = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_CGAL_Polyline_simplification_2', [dirname(__file__)])
        except ImportError:
            import _CGAL_Polyline_simplification_2
            return _CGAL_Polyline_simplification_2
        try:
            _mod = imp.load_module('_CGAL_Polyline_simplification_2', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _CGAL_Polyline_simplification_2 = swig_import_helper()
    del swig_import_helper
else:
    import _CGAL_Polyline_simplification_2
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

import CGAL.CGAL_Kernel
import CGAL.CGAL_Triangulation_2
class PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def dimension(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_dimension(self)

    def vertex(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_vertex(self, *args)

    def has_vertex(self, c):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_has_vertex(self, c)

    def neighbor(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_neighbor(self, *args)

    def has_neighbor(self, c):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_has_neighbor(self, c)

    def index(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_index(self, *args)

    def set_vertex(self, c1, c2):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_set_vertex(self, c1, c2)

    def set_vertices(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_set_vertices(self, *args)

    def set_neighbor(self, c1, c2):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_set_neighbor(self, c1, c2)

    def set_neighbors(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_set_neighbors(self, *args)

    def reorient(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_reorient(self)

    def ccw_permute(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_ccw_permute(self)

    def cw_permute(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_cw_permute(self)

    def is_valid(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_is_valid(self, *args)

    def __lt__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle)

class PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def point(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_point(self, *args)

    def set_point(self, c):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_set_point(self, c)

    def __lt__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___lt__(self, p)

    def __gt__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___gt__(self, p)

    def __le__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___le__(self, p)

    def __ge__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___ge__(self, p)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___ne__(self, p)

    def __hash__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle___hash__(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_deepcopy(self, *args)

    def is_removable(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_is_removable(self)

    def set_removable(self, b):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_set_removable(self, b)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle)

class PS2_Constrained_Delaunay_triangulation_plus_2_Edge(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Edge, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Edge, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Edge(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_setmethods__["first"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_first_set
    __swig_getmethods__["first"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_first_get
    if _newclass:
        first = _swig_property(_CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_first_get, _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_first_set)
    __swig_setmethods__["second"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_second_set
    __swig_getmethods__["second"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_second_get
    if _newclass:
        second = _swig_property(_CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_second_get, _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Edge
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Edge_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Edge_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Edge)

class Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def clear(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_clear(self)

    def dimension(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_dimension(self)

    def number_of_vertices(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_number_of_vertices(self)

    def number_of_faces(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_number_of_faces(self)

    def infinite_face(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_infinite_face(self, *args)

    def infinite_vertex(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_infinite_vertex(self, *args)

    def finite_vertex(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_finite_vertex(self, *args)

    def is_infinite(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_is_infinite(self, *args)

    def is_edge(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_is_edge(self, *args)

    def includes_edge(self, va, vb, vbr, fr, i):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_includes_edge(self, va, vb, vbr, fr, i)

    def is_face(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_is_face(self, *args)

    def oriented_side(self, c1, c2):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_oriented_side(self, c1, c2)

    def side_of_oriented_circle(self, c1, c2):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_side_of_oriented_circle(self, c1, c2)

    def locate(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_locate(self, *args)

    def push_back(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_push_back(self, *args)

    def remove(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove(self, c)

    def insert_first(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_first(self, *args)

    def insert_second(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_second(self, *args)

    def insert_in_face(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_in_face(self, *args)

    def insert_in_edge(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_in_edge(self, *args)

    def insert_outside_convex_hull(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_outside_convex_hull(self, *args)

    def insert_outside_affine_hull(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_outside_affine_hull(self, *args)

    def remove_degree_3(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove_degree_3(self, c)

    def remove_second(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove_second(self, c)

    def remove_first(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove_first(self, c)

    def insert(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert(self, *args)

    def finite_vertices(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_finite_vertices(self)

    def finite_edges(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_finite_edges(self)

    def finite_faces(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_finite_faces(self)

    def all_vertices(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_all_vertices(self)

    def all_edges(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_all_edges(self)

    def all_faces(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_all_faces(self)

    def points(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_points(self)

    def line_walk(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_line_walk(self, *args)

    def incident_faces(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_incident_faces(self, *args)

    def incident_edges(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_incident_edges(self, *args)

    def incident_vertices(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_incident_vertices(self, *args)

    def mirror_vertex(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_mirror_vertex(self, *args)

    def mirror_index(self, c1, c2):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_mirror_index(self, c1, c2)

    def ccw(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_ccw(self, c)

    def cw(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_cw(self, c)

    def circumcenter(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_circumcenter(self, *args)

    def set_infinite_vertex(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_set_infinite_vertex(self, c)

    def is_valid(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_is_valid(self, *args)

    def triangle(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_triangle(self, *args)

    def segment(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_segment(self, *args)

    def __str__(self):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2___str__(self)

    def write_to_file(self, fname, prec=5):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_write_to_file(self, fname, prec)

    def read_from_file(self, fname):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_read_from_file(self, fname)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_deepcopy(self, *args)

    def same_internal_object(self, other):
        return _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_same_internal_object(self, other)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2
    __del__ = lambda self: None
Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister = _CGAL_Polyline_simplification_2.Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister
Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister(Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2)

class PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_All_vertices_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Finite_vertices_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_All_faces_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Finite_faces_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_All_edges_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Finite_edges_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Point_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator___iter__(self)

    def next(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Line_face_circulator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator___iter__(self)

    def next(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Face_circulator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator___iter__(self)

    def next(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Edge_circulator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator___iter__(self)

    def next(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_next(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_deepcopy(self, *args)

    def prev(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_prev(self)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_circulator)

class Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set(self, t):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_set(self, t)

    def object(self):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle
    __del__ = lambda self: None
Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister = _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister
Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle_swigregister(Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Face_handle)

class Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def set(self, t):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_set(self, t)

    def object(self):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_object(self)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_deepcopy(self, *args)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle
    __del__ = lambda self: None
Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister = _CGAL_Polyline_simplification_2.Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister
Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle_swigregister(Ref_PS2_Constrained_Delaunay_triangulation_plus_2_Vertex_handle)

class Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2(Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2):
    __swig_setmethods__ = {}
    for _s in [Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name, value)
    __swig_getmethods__ = {}
    for _s in [Internal_Triangulation_2_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def is_constrained(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_is_constrained(self, c)

    def are_there_incident_constraints(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_are_there_incident_constraints(self, c)

    def push_back(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_push_back(self, c)

    def incident_constraints(self, v, edge_output_iterator):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_incident_constraints(self, v, edge_output_iterator)

    def insert_constraint(self, *args):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_constraint(self, *args)

    def remove(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove(self, c)

    def remove_incident_constraints(self, c):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove_incident_constraints(self, c)

    def remove_constrained_edge(self, c1, c2):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_remove_constrained_edge(self, c1, c2)

    def insert_constraint_range(self, range):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_insert_constraint_range(self, range)

    def deepcopy(self):
        return _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_deepcopy(self)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2
    __del__ = lambda self: None
Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister = _CGAL_Polyline_simplification_2.Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister
Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister(Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2)

class Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2(Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2):
    __swig_setmethods__ = {}
    for _s in [Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name, value)
    __swig_getmethods__ = {}
    for _s in [Internal_Contrained_triangulation_2_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def deepcopy(self):
        return _CGAL_Polyline_simplification_2.Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_deepcopy(self)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2
    __del__ = lambda self: None
Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister = _CGAL_Polyline_simplification_2.Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister
Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2_swigregister(Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2)

class PS2_Constrained_Delaunay_triangulation_plus_2_Constraint(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_setmethods__["first"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_first_set
    __swig_getmethods__["first"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_first_get
    if _newclass:
        first = _swig_property(_CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_first_get, _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_first_set)
    __swig_setmethods__["second"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_second_set
    __swig_getmethods__["second"] = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_second_get
    if _newclass:
        second = _swig_property(_CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_second_get, _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_second_set)
    def __len__(self):
        return 2
    def __repr__(self):
        return str((self.first, self.second))
    def __getitem__(self, index): 
        if not (index % 2):
            return self.first
        else:
            return self.second
    def __setitem__(self, index, val):
        if not (index % 2):
            self.first = val
        else:
            self.second = val
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Constraint)

class PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Subconstraint_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Vertices_in_constraint_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def __iter__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator___iter__(self)

    def __next__(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator___next__(self)

    def next(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_next(self, *args)

    def deepcopy(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_deepcopy(self, *args)

    def hasNext(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_hasNext(self)

    def __eq__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator___eq__(self, p)

    def __ne__(self, p):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator___ne__(self, p)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Context_iterator)

class PS2_Constrained_Delaunay_triangulation_plus_2(Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2):
    __swig_setmethods__ = {}
    for _s in [Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2, name, value)
    __swig_getmethods__ = {}
    for _s in [Internal_Constrained_Delaunay_triangulation_2_PS2_Constrained_Delaunay_triangulation_plus_2]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def remove_constraint(self, c1, c2):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_remove_constraint(self, c1, c2)

    def number_of_enclosing_constraints(self, c1, c2):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_number_of_enclosing_constraints(self, c1, c2)

    def constraints(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_constraints(self)

    def subconstraints(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_subconstraints(self)

    def context(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_context(self, *args)

    def contexts(self, va, vb):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_contexts(self, va, vb)

    def deepcopy(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_deepcopy(self)

    def insert_constraint(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_insert_constraint(self, *args)

    def vertices_in_constraint(self, *args):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_vertices_in_constraint(self, *args)

    def remove_points_without_corresponding_vertex(self, cid):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_remove_points_without_corresponding_vertex(self, cid)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2)

class PS2_Constrained_Delaunay_triangulation_plus_2_Context(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Context, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Context, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Context()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def vertices(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_vertices(self)

    def current(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_current(self)

    def number_of_vertices(self):
        return _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_number_of_vertices(self)
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Context
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Context_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Context_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Context_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Context)

class PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id
    __del__ = lambda self: None
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id_swigregister = _CGAL_Polyline_simplification_2.PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id_swigregister
PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id_swigregister(PS2_Constrained_Delaunay_triangulation_plus_2_Constraint_id)

class Hybrid_squared_distance_cost(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Hybrid_squared_distance_cost, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Hybrid_squared_distance_cost, name)
    __repr__ = _swig_repr

    def __init__(self, ratio):
        this = _CGAL_Polyline_simplification_2.new_Hybrid_squared_distance_cost(ratio)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Hybrid_squared_distance_cost
    __del__ = lambda self: None
Hybrid_squared_distance_cost_swigregister = _CGAL_Polyline_simplification_2.Hybrid_squared_distance_cost_swigregister
Hybrid_squared_distance_cost_swigregister(Hybrid_squared_distance_cost)

class Scaled_squared_distance_cost(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Scaled_squared_distance_cost, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Scaled_squared_distance_cost, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_Scaled_squared_distance_cost()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Scaled_squared_distance_cost
    __del__ = lambda self: None
Scaled_squared_distance_cost_swigregister = _CGAL_Polyline_simplification_2.Scaled_squared_distance_cost_swigregister
Scaled_squared_distance_cost_swigregister(Scaled_squared_distance_cost)

class Squared_distance_cost(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Squared_distance_cost, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Squared_distance_cost, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _CGAL_Polyline_simplification_2.new_Squared_distance_cost()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Squared_distance_cost
    __del__ = lambda self: None
Squared_distance_cost_swigregister = _CGAL_Polyline_simplification_2.Squared_distance_cost_swigregister
Squared_distance_cost_swigregister(Squared_distance_cost)

class Stop_above_cost_threshold(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stop_above_cost_threshold, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stop_above_cost_threshold, name)
    __repr__ = _swig_repr

    def __init__(self, threshold):
        this = _CGAL_Polyline_simplification_2.new_Stop_above_cost_threshold(threshold)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Stop_above_cost_threshold
    __del__ = lambda self: None
Stop_above_cost_threshold_swigregister = _CGAL_Polyline_simplification_2.Stop_above_cost_threshold_swigregister
Stop_above_cost_threshold_swigregister(Stop_above_cost_threshold)

class Stop_below_count_ratio_threshold(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stop_below_count_ratio_threshold, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stop_below_count_ratio_threshold, name)
    __repr__ = _swig_repr

    def __init__(self, threshold):
        this = _CGAL_Polyline_simplification_2.new_Stop_below_count_ratio_threshold(threshold)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Stop_below_count_ratio_threshold
    __del__ = lambda self: None
Stop_below_count_ratio_threshold_swigregister = _CGAL_Polyline_simplification_2.Stop_below_count_ratio_threshold_swigregister
Stop_below_count_ratio_threshold_swigregister(Stop_below_count_ratio_threshold)

class Stop_below_count_threshold(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Stop_below_count_threshold, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Stop_below_count_threshold, name)
    __repr__ = _swig_repr

    def __init__(self, threshold):
        this = _CGAL_Polyline_simplification_2.new_Stop_below_count_threshold(threshold)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _CGAL_Polyline_simplification_2.delete_Stop_below_count_threshold
    __del__ = lambda self: None
Stop_below_count_threshold_swigregister = _CGAL_Polyline_simplification_2.Stop_below_count_threshold_swigregister
Stop_below_count_threshold_swigregister(Stop_below_count_threshold)


def simplify(*args):
    return _CGAL_Polyline_simplification_2.simplify(*args)
simplify = _CGAL_Polyline_simplification_2.simplify
# This file is compatible with both classic and new-style classes.


