MACRO(EXTRACT_CPP_AND_LIB_FILES)
  #recover cpp files to be compiled
  SET(object_files)
  SET(libstolinkwith)
  FOREACH(it ${ARGN})
    IF(${it} MATCHES ".*\\.cpp$")
      SET(object_files ${object_files} "${it}")
    ELSE(${it} MATCHES ".*\\.cpp$")
      SET(libstolinkwith ${libstolinkwith} "${it}")
    ENDIF(${it} MATCHES ".*\\.cpp$")
  ENDFOREACH(it)
ENDMACRO(EXTRACT_CPP_AND_LIB_FILES)
MACRO(ADD_SWIG_CGAL_LIBRARY libname)
  include_directories(${CMAKE_CURRENT_SOURCE_DIR})
  include_directories(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/../include) #
  set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CGAL-bindings_BINARY_DIR}/lib")
  add_library(${libname} ${ARGN})
ENDMACRO()

MACRO(ADD_SWIG_CGAL_JAVA_MODULE packagename)
  SET (MODULENAME "CGAL_${packagename}")
  SET (INTERFACE_FILES  "CGAL_${packagename}.i")
  SET (JAVAPACKAGENAME "CGAL.${packagename}")
  SET (JAVABUILDPATH "${JAVABUILDPATHPREFIX}/CGAL/${packagename}")
  
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/../include)

  #recover cpp files to be compiled
  EXTRACT_CPP_AND_LIB_FILES(${ARGN})

  SET_SOURCE_FILES_PROPERTIES(${INTERFACE_FILES} PROPERTIES CPLUSPLUS ON)

  #Build bindings for java
  if (JAVA_INCLUDE_PATH)
    INCLUDE_DIRECTORIES(BEFORE ${JAVA_INCLUDE_PATH} ${JAVA_INCLUDE_PATH2})
    LINK_DIRECTORIES(${JAVALIBPATH})
    SET (CMAKE_SWIG_OUTDIR ${JAVABUILDPATH})
    SET(CMAKE_SWIG_FLAGS -package ${JAVAPACKAGENAME})
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${JAVALIBPATH})
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${JAVALIBPATH})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${JAVALIBPATH})
    SWIG_ADD_MODULE(${MODULENAME} java ${INTERFACE_FILES} ${object_files})
    SWIG_LINK_LIBRARIES(${MODULENAME} ${libstolinkwith})
  else()
    message("JNI has not been found, ${packagename} bindings for java will not be compiled.")
  endif()
ENDMACRO(ADD_SWIG_CGAL_JAVA_MODULE)

MACRO(ADD_SWIG_CGAL_PYTHON_MODULE packagename)
  SET (MODULENAME "CGAL_${packagename}")
  SET (INTERFACE_FILES  "CGAL_${packagename}.i")
  
  INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
  INCLUDE_DIRECTORIES(BEFORE ${CMAKE_CURRENT_SOURCE_DIR}/../include)

  #recover cpp files to be compiled
  EXTRACT_CPP_AND_LIB_FILES(${ARGN})

  SET_SOURCE_FILES_PROPERTIES(${INTERFACE_FILES} PROPERTIES CPLUSPLUS ON)

  #Build bindings for python
  if(PYTHONLIBS_FOUND)
    INCLUDE_DIRECTORIES(${PYTHON_INCLUDE_DIRS})
    SET (CMAKE_SWIG_OUTDIR "${PYTHONBUILDPATH}/CGAL")
    SET(CMAKE_SWIG_FLAGS)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${PYTHONBUILDPATH}/CGAL")
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${PYTHONBUILDPATH}/CGAL")
    SET(CMAKE_MODULE_OUTPUT_DIRECTORY "${PYTHONBUILDPATH}/CGAL")
    SWIG_ADD_MODULE(${MODULENAME} python ${INTERFACE_FILES} ${object_files})
    SWIG_LINK_LIBRARIES(${MODULENAME} ${libstolinkwith})
  else()
    message("Python has not been found, ${packagename} bindings for python will not be compiled.")
  endif()
ENDMACRO(ADD_SWIG_CGAL_PYTHON_MODULE)

