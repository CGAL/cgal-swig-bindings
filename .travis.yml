language: generic
sudo: required
os:
  - osx
#  - linux   # CANNOT DO LINUX: cgal version is too old

python:
  - "2.7"
  - "3.6"

matrix:
  exclude:
  - os: osx
    python: "2.7"
  - os: osx
    python: "3.6"
  include:
  - os: osx
    env: PYTHON=2.7
  - os: osx
    env: PYTHON=3.6

# Copied from
# https://pythonhosted.org/CodeChat/.travis.yml.html#before-install
before_install:
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    brew update
    # Per the `pyenv homebrew recommendations <https://github.com/yyuu/pyenv/wiki#suggested-build-environment>`_.
    brew install openssl readline
    # See https://docs.travis-ci.com/user/osx-ci-environment/#A-note-on-upgrading-packages.
    # I didn't do this above because it works and I'm lazy.
    brew outdated pyenv || brew upgrade pyenv
    # virtualenv doesn't work without pyenv knowledge. venv in Python 3.3
    # doesn't provide Pip by default. So, use `pyenv-virtualenv <https://github.com/yyuu/pyenv-virtualenv/blob/master/README.md>`_.
    brew install pyenv-virtualenv
    pyenv install $PYTHON
    # I would expect something like ``pyenv init; pyenv local $PYTHON`` or
    # ``pyenv shell $PYTHON`` would work, but ``pyenv init`` doesn't seem to
    # modify the Bash environment. ??? So, I hand-set the variables instead.
    export PYENV_VERSION=$PYTHON
    export PATH="/Users/travis/.pyenv/shims:${PATH}"
    pyenv-virtualenv venv
    source venv/bin/activate
    # A manual check that the correct version of Python is running.
    python --version
  fi


addons:
  apt:
    packages:
    - libcgal-dev
    - libmpfr-dev
    - libboost-atomic-dev
    - libboost-chrono-dev
    - libboost-date-time-dev
    - libboost-system-dev
    - libboost-thread-dev
    - libeigen3-dev
    - swig
    - python-dev
    - python-numpy
    - python3-dev
    - python3-numpy

install:
  - pip -v install .

script:
  - test.sh
