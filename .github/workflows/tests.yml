name: cross-platform tests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        cgal_branch: [v5.4.1, 5.4.x-branch, 5.5.x-branch, master]
        # cgal_branch: [v5.4]
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']
        # python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: .integration/conda-env-test.yml
          activate-environment: test
      - name: Display Python version
        shell: bash -l {0}
        run: |
          echo -n "Wanted: "
          echo ${{ matrix.python-version }}
          python --version
      - name: Conda info
        shell: bash -l {0}
        run: conda info
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      # - name: Install dependencies
      #   shell: bash -l {0}
      #   run: |
      #     $CONDA/bin/conda install -n test -y -c conda-forge 'boost-cpp>=1.77' bzip2 zlib eigen mpfr mpir tbb numpy wheel twine swig

      - name: Install CGAL
        shell: bash -l {0}
        run: |
          set -xe
          pushd $HOME
          git clone --depth 1 -b ${{ matrix.cgal_branch }} https://github.com/CGAL/cgal.git
          cd cgal
          mkdir build
          cmake -B build -S . -DCMAKE_INSTALL_PREFIX=$HOME/.local -DCMAKE_BUILD_TYPE=Release ..
          cmake  --install build
          cd ..
          rm -rf cgal
          popd

      - name: Compile CGAL SWIG Bindings
        if: false
        shell: bash -l {0}
        run: |
          set -ex
          mkdir $HOME/build-cgal-swig-bindings
          export CMAKE_PREFIX_PATH=$($CONDA/bin/conda env list --json | jq -r '.envs | .[] | select(test("test"))')
          echo CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}
          cmake -S $PWD -B $HOME/build-cgal-swig-bindings -DCMAKE_INSTALL_PREFIX=$HOME/.local  -DCGAL_DIR=$HOME/.local -DCMAKE_BUILD_TYPE=Release #--debug-find
          cmake --build $HOME/build-cgal-swig-bindings --target install --config Release -j$(nproc)

      - name: pycodestyle
        shell: bash -l {0}
        env:
          CGAL_PYTHON_EXAMPLES: examples/python
          PYCODESTYLE_CONVENTIONS: "--max-line-length=120"
        run: |
          pycodestyle --show-source --show-pep8 $PYCODESTYLE_CONVENTIONS $CGAL_PYTHON_EXAMPLES || pycodestyle --statistics $PYCODESTYLE_CONVENTIONS -qq $CGAL_PYTHON_EXAMPLES

      - name: Build local wheel
        shell: bash -l {0}
        run: |
          set -ex
          export CMAKE_PREFIX_PATH=$($CONDA/bin/conda env list --json | jq -r '.envs | .[] | select(test("test"))')
          CGAL_VERSION=$(perl -lan -e 'if(/CGAL_VERSION /) { $v=@F[2]; $v =~ s/-.*//; print "$v" }' $HOME/.local/include/CGAL/version.h)
          CGAL_SWIG_BINDINGS_VERSION=$(git show --no-patch --format='format:%ad' --date=format:'%Y%m%d')
          CGAL_PYTHON_MODULE_VERSION=$CGAL_VERSION-$CGAL_SWIG_BINDINGS_VERSION
          echo Create package version $CGAL_PYTHON_MODULE_VERSION
          export CGAL_PYTHON_MODULE_VERSION
          mkdir -p build/build-python/CGAL
          case ${{ runner.os }} in
            Linux)
              docker pull cgal/python-wheel:manylinux2014
              docker run --rm -v$HOME/.local:/cgal -v${PWD}:/cgal-bindings -ePYTHON_VERSION_MINOR=$(python -c "import sys; print(sys.version_info.minor)") cgal/python-wheel:manylinux2014
              rm cgal-*.whl
              cp wheelhouse/*.whl .
              ;;
            macOS)
              CGAL_DIR=$HOME/.local python -m pip wheel -v .
              delocate-wheel -w fixed_wheel cgal-.whl
              rm cgal-*.whl
              cp fixed_wheel/*.whl .
              ;;
            Windows)
              CGAL_DIR=$HOME/.local python -m pip wheel -v .
              ;;
          esac
          unzip -l cgal-*whl

      - name: Install wheel and test it
        shell: bash -l {0}
        run: |
          set -ex
          python -m pip install cgal-*.whl
          cd examples/python
          for i in *.py; do
            python $i
          done
