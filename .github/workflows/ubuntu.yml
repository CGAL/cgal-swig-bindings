name: Ubuntu Tests

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        cgal_branch: [v5.1, v5.2, master]
        python_minor_version: [6, 7, 8]

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Python 3.${{ matrix.python_minor_version }}
      uses: actions/setup-python@v1
      with:
        python-version: 3.${{ matrix.python_minor_version }}


    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Install dependencies
      run: |
       sudo apt-get update
       sudo apt-get install -y libmpfr-dev libboost-atomic-dev libboost-chrono-dev libboost-date-time-dev libboost-iostreams-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev libeigen3-dev swig openjdk-8-jdk libgl1-mesa-dev libtbb-dev
       python -m pip install --upgrade pip
       python -m pip --version
       python -m pip install numpy twine pycodestyle

    - name: Install CGAL and other dependencies
      run: |
        git clone --depth 1 -b ${{ matrix.cgal_branch }} https://github.com/CGAL/cgal.git
        cd cgal
        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/cgal -DCMAKE_BUILD_TYPE=Release ..
        make -j2 VERBOSE=1
        sudo make install
        cd ../..

    - name: Installation
      run: bash .integration/travis_install.sh ${{ runner.os }}

    - name: Test Installation
      run: |
        if [ ${{ github.event_name }} = 'push' ]; then
          export DO_UPLOAD="TRUE"
        fi
        bash .integration/travis.sh ${{ runner.os }} ${{ secrets.TEST_PYPI_PASSWORD }}
      env:
        CGAL_PYTHON_EXAMPLES: examples/python
        PYCODESTYLE_CONVENTIONS: "--max-line-length=120"
